package com.example.administrator.merchants.activity;

import android.app.ProgressDialog;
import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.View;
import android.widget.ListView;
import android.widget.TextView;

import com.example.administrator.merchants.R;
import com.example.administrator.merchants.adapter.EvaluateAdapter;
import com.example.administrator.merchants.base.BaseActivity;
import com.example.administrator.merchants.dialog.MineAvatarDialog;
import com.example.administrator.merchants.http.Http;
import com.example.administrator.merchants.application.MutualApplication;
import com.example.administrator.merchants.http.PossObject;
import com.example.administrator.merchants.http.post.EvaluatePostBean;
import com.example.administrator.merchants.common.toast.CustomToast;
import com.example.administrator.merchants.common.PicUtils;
import com.example.administrator.merchants.common.UserInfo;

import java.io.File;
import java.text.SimpleDateFormat;

/**
 * 作者：韩宇 on 2017/6/23 0023 14:39
 * 邮箱：18698802347@163.com
 * QQ：1760010478
 * 功能：确认评价
 */
public class EvaluateActivity extends BaseActivity implements MineAvatarDialog.BackChoose {
    private ListView listView;
    private EvaluateAdapter evaluateAdapter;
    private String ordno;
    private static final int PHOTO_REQUEST_CAREMA = 1;// 拍照
    private static final int PHOTO_REQUEST_GALLERY = 2;// 从相册中选择
    private File tempFile;
    private TextView textView;
    private ProgressDialog p_dialog;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_bei_management);
        ordno = getIntent().getStringExtra("ordno");
        setTitles("评论与收货");
        textView = (TextView) findViewById(R.id.head_button);
        textView.setText("发布");
        textView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                p_dialog = ProgressDialog
                        .show(EvaluateActivity.this,
                                "",
                                "上传中请稍后...",
                                true);
                toServer();
            }
        });
        listView = (ListView) findViewById(R.id.activity_bei_management);
        evaluateAdapter = new EvaluateAdapter(EvaluateActivity.this, MutualApplication.chooseOrderList);
        listView.setAdapter(evaluateAdapter);

    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == PHOTO_REQUEST_GALLERY) {
            // 从相册返回的数据
            if (data != null) {
                // 得到图片的全路径
                Uri uri = data.getData();
                if (MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getType() == 0) {
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getUris().add(uri);
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).setType(1);
                } else if (MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getType() == 1) {
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getUris().add(uri);
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).setType(2);
                } else if (MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getType() == 2) {
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getUris().add(uri);
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).setType(3);
                }
                getBitmapFromUri(uri, EvaluateAdapter.yy);
                evaluateAdapter.notifyDataSetChanged();
            }
        } else if (requestCode == PHOTO_REQUEST_CAREMA) {
            // 从相机返回的数据
            if (hasSdcard()) {
                Uri uri = Uri.fromFile(tempFile);
                if (MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getType() == 0) {
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getUris().add(uri);
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).setType(1);
                } else if (MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getType() == 1) {
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getUris().add(uri);
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).setType(2);
                } else if (MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getType() == 2) {
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getUris().add(uri);
                    MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).setType(3);
                }
                getBitmapFromUri(uri, EvaluateAdapter.yy);
                MutualApplication.chooseOrderList.get(EvaluateAdapter.yy).getFileList().add(tempFile);
                evaluateAdapter.notifyDataSetChanged();
            } else {
                CustomToast.getInstance(EvaluateActivity.this).setMessage("未找到存储卡，无法存储照片！");
            }
        }

        super.onActivityResult(requestCode, resultCode, data);
    }

    /**
     * 从相册获取
     */
    public void gallery() {
        Intent intent = new Intent(Intent.ACTION_PICK);
        intent.setType("image/*");
        startActivityForResult(intent, PHOTO_REQUEST_GALLERY);
    }

    /**
     * 从相机获取
     */
    public void camera() {
        SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyyMMddhhmmss");
        final String date = sDateFormat.format(new java.util.Date());
        Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
        if (hasSdcard()) {
            tempFile = new File(Environment.getExternalStorageDirectory(),
                    date + ".jpg");
            Uri uri = Uri.fromFile(tempFile);
            intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);
        }
        // 开启一个带有返回值的Activity，请求码为PHOTO_REQUEST_CAREMA
        startActivityForResult(intent, PHOTO_REQUEST_CAREMA);
    }

    /**
     * 判断sdcard是否被挂载
     */
    private boolean hasSdcard() {
        if (Environment.getExternalStorageState().equals(
                Environment.MEDIA_MOUNTED)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public void isChoose(boolean choose) {
        if (choose) {
            gallery();
        } else {
            camera();
        }
    }

    /**
     * 由照片uri获取绝对路径
     *
     * @param uri
     * @return path
     */
    public String getRealFilePath(final Uri uri) {
        if (null == uri)
            return null;
        final String scheme = uri.getScheme();
        String data = null;
        if (scheme == null)
            data = uri.getPath();
        else if (ContentResolver.SCHEME_FILE.equals(scheme)) {
            data = uri.getPath();
        } else if (ContentResolver.SCHEME_CONTENT.equals(scheme)) {
            Cursor cursor = getContentResolver().query(uri,
                    new String[]{MediaStore.Images.ImageColumns.DATA}, null, null, null);
            if (null != cursor) {
                if (cursor.moveToFirst()) {
                    int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);
                    if (index > -1) {
                        data = cursor.getString(index);
                    }
                }
                cursor.close();
            }
        }
        return data;
    }

    /***
     * url转bitmap
     *
     * @param uri
     * @return
     */
    private void getBitmapFromUri(Uri uri, int pos) {
        SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyyMMdd_hhmmss");
        final String date = sDateFormat.format(new java.util.Date());

        PicUtils.compress(getRealFilePath(uri), getFilesDir() + MutualApplication.chooseOrderList.get(pos).getOrddetailid() + "_" + date + "_" + ".png");
        File file = new File(getFilesDir() + MutualApplication.chooseOrderList.get(pos).getOrddetailid() + "_" + date + "_" + ".png");
        while (!file.exists()) ;
        MutualApplication.chooseOrderList.get(pos).getFiles().add(file);
    }
    /***
     * 确认收货并评论
     */
    private void toServer() {
        EvaluatePostBean evaluatePostBean=new EvaluatePostBean();
        evaluatePostBean.setWordno(ordno);
        evaluatePostBean.setWstoreid(UserInfo.getInstance().getUser(EvaluateActivity.this).getStoreid());
        evaluatePostBean.setWmerList(PossObject.evaluateDate());
        Http.evaluate(EvaluateActivity.this,evaluatePostBean,p_dialog);
    }

    @Override
    protected void onStop() {
        super.onStop();
        MutualApplication.getRequestQueue().cancelAll("evaluate36");
    }
}
