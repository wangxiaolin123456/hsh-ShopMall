package com.example.administrator.merchants.http.listener;

import android.content.Context;
import android.view.View;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import com.android.volley.Response;
import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.example.administrator.merchants.R;
import com.example.administrator.merchants.adapter.GoodsDetailImagesAdapter;
import com.example.administrator.merchants.common.GlideTest;
import com.example.administrator.merchants.fragment.GoodsDetailsFragment;
import com.example.administrator.merchants.http.HttpUrl;
import com.example.administrator.merchants.http.Status;
import com.example.administrator.merchants.http.show.CarouselShowBean;
import com.example.administrator.merchants.http.show.GoodsDetailShowBean;
import com.example.administrator.merchants.common.views.CustomerViewPage;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

/**
 * 作者：韩宇 on 2017/8/17 0017 14:10
 * 邮箱：18698802347@163.com
 * QQ：1760010478
 * 功能：获取商品详情信息
 */
public class GetGoodsDetailListener implements Response.Listener<JSONObject> {
    private Context context;
    private TextView shopName;
    private TextView goodsDetail_monNo;
    private TextView goodsDetail_storeNo;
    private TextView textView_sale_price;
    private TextView goodsDetail_info;
    private CustomerViewPage viewPage;
    private List<CarouselShowBean> listCarouselShowBean;
    private ListView listView;
    private View headView;
    private List<String> listImage;
    private TextView noHave;
    private ImageView anim;

    public GetGoodsDetailListener(Context context, TextView shopName, TextView goodsDetail_monNo, TextView goodsDetail_storeNo, TextView textView_sale_price, TextView goodsDetail_info, List<CarouselShowBean> listCarouselShowBean
            , CustomerViewPage viewPage, ListView listView, View headView, List<String> listImage, TextView noHave,ImageView anim) {
        this.context = context;
        this.shopName = shopName;
        this.listCarouselShowBean = listCarouselShowBean;
        this.goodsDetail_monNo = goodsDetail_monNo;
        this.goodsDetail_storeNo = goodsDetail_storeNo;
        this.textView_sale_price = textView_sale_price;
        this.goodsDetail_info = goodsDetail_info;
        this.viewPage = viewPage;
        this.listView = listView;
        this.headView = headView;
        this.listImage = listImage;
        this.noHave = noHave;
        this.anim=anim;
    }

    @Override
    public void onResponse(JSONObject jsonObject) {
        if (Status.status(jsonObject)) {
            //返回成功
            try {
                JSONObject object = (JSONObject) jsonObject.get("merinfo");
                GoodsDetailShowBean goodsDetailBean = new GoodsDetailShowBean();
                goodsDetailBean.setImgpfile(HttpUrl.BaseImageUrl + object.getString("imgpfile"));
                goodsDetailBean.setMerdescr(object.getString("merdescr"));
                goodsDetailBean.setMerid(object.getString("merid"));
                goodsDetailBean.setMername(object.getString("mername"));
                goodsDetailBean.setMonthsalenum(object.getDouble("monthsalenum"));
                goodsDetailBean.setSaleprice(object.getDouble("saleprice"));
                goodsDetailBean.setScoreavg(object.getDouble("scorememavg"));
                GoodsDetailsFragment.isModel = object.getString("ismodel");
                if (object.getDouble("storenum") <= 0) {//库存
                    goodsDetailBean.setStorenum(Double.parseDouble("0"));
                } else {
                    goodsDetailBean.setStorenum(object.getDouble("storenum"));
                }
                shopName.setText(goodsDetailBean.getMername());
                goodsDetail_monNo.setText(Integer.parseInt(new DecimalFormat("0").format(goodsDetailBean.getMonthsalenum())) + "");

                goodsDetail_storeNo.setText(Integer.parseInt(new DecimalFormat("0").format(goodsDetailBean.getStorenum())) + "");
                textView_sale_price.setText(String.valueOf(goodsDetailBean.getSaleprice()));
                if (goodsDetailBean.getMerdescr().equals("")) {
                    goodsDetail_info.setText("该产品暂无详情！");
                } else {
                    goodsDetail_info.setText(goodsDetailBean.getMerdescr());//" \u3000\u3000" +
                }
                JSONArray jsonArray1 = jsonObject.getJSONArray("imglist");
                List<JSONObject> objectArrayList = new ArrayList<>();
                for (int i = 0; i < jsonArray1.length(); i++) {
                    objectArrayList.add((JSONObject) jsonArray1.get(i));
                }
                listCarouselShowBean.clear();
                for (int j = 0; j < objectArrayList.size(); j++) {
                    CarouselShowBean carouselShowBean = new CarouselShowBean();
                    carouselShowBean.setImgpfile(HttpUrl.BaseImageUrl + objectArrayList.get(j).getString("imgpfile"));
                    listCarouselShowBean.add(carouselShowBean);
                }
                List<View> views = new ArrayList<>();
                for (int i = 0; i < listCarouselShowBean.size(); i++) {
                    ImageView imageView = new ImageView(context);
                    imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);//等比例放大图片ScaleType.FIT_CENTER
                    Glide.with(context.getApplicationContext()).load(listCarouselShowBean.get(i).getImgpfile()).diskCacheStrategy(DiskCacheStrategy.ALL).placeholder(R.drawable.image_loading)
                            .into(imageView);
                    views.add(imageView);
                }
                viewPage.setViewPageViews(views);
                //不启动轮播的线程
                viewPage.setIsAlive(false);
                listView.addHeaderView(headView);
                JSONArray jsonArray = (JSONArray) jsonObject.get("descrimglist");
                if (jsonArray.length() != 0) {
                    List<JSONObject> imgObjectList = new ArrayList<>();
                    for (int i = 0; i < jsonArray.length(); i++) {
                        JSONObject object1 = new JSONObject();
                        object1 = (JSONObject) jsonArray.get(i);
                        imgObjectList.add(object1);
                    }
                    for (int j = 0; j < imgObjectList.size(); j++) {
                        String s = HttpUrl.BaseImageUrl + imgObjectList.get(j).getString("imgpfile");
                        listImage.add(s);
                    }
                    noHave.setVisibility(View.GONE);
                    listView.setAdapter(new GoodsDetailImagesAdapter(context, listImage));
                } else {
                    noHave.setVisibility(View.VISIBLE);
                    listView.setAdapter(new GoodsDetailImagesAdapter(context, listImage));
                }
                GoodsDetailsFragment.loding=1;
                GlideTest.imageCancle(anim);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            //返回失败
            Status.fail(context, jsonObject);
        }

    }
}
